#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.Linq.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UTTTCIBERCOMDB")]
	public partial class DcGeneralDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCatArea(CatArea instance);
    partial void UpdateCatArea(CatArea instance);
    partial void DeleteCatArea(CatArea instance);
    partial void InsertUSUARIO(USUARIO instance);
    partial void UpdateUSUARIO(USUARIO instance);
    partial void DeleteUSUARIO(USUARIO instance);
    partial void InsertCatRecoveryToken(CatRecoveryToken instance);
    partial void UpdateCatRecoveryToken(CatRecoveryToken instance);
    partial void DeleteCatRecoveryToken(CatRecoveryToken instance);
    partial void InsertCatRol(CatRol instance);
    partial void UpdateCatRol(CatRol instance);
    partial void DeleteCatRol(CatRol instance);
    partial void InsertCOMPUTADORA(COMPUTADORA instance);
    partial void UpdateCOMPUTADORA(COMPUTADORA instance);
    partial void DeleteCOMPUTADORA(COMPUTADORA instance);
    partial void InsertEMPLEADO(EMPLEADO instance);
    partial void UpdateEMPLEADO(EMPLEADO instance);
    partial void DeleteEMPLEADO(EMPLEADO instance);
    partial void InsertRENTA(RENTA instance);
    partial void UpdateRENTA(RENTA instance);
    partial void DeleteRENTA(RENTA instance);
    #endregion
		
		public DcGeneralDataContext() : 
				base(global::Data.Linq.Properties.Settings.Default.UTTTCIBERCOMDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CatArea> CatArea
		{
			get
			{
				return this.GetTable<CatArea>();
			}
		}
		
		public System.Data.Linq.Table<USUARIO> USUARIO
		{
			get
			{
				return this.GetTable<USUARIO>();
			}
		}
		
		public System.Data.Linq.Table<CatRecoveryToken> CatRecoveryToken
		{
			get
			{
				return this.GetTable<CatRecoveryToken>();
			}
		}
		
		public System.Data.Linq.Table<CatRol> CatRol
		{
			get
			{
				return this.GetTable<CatRol>();
			}
		}
		
		public System.Data.Linq.Table<COMPUTADORA> COMPUTADORA
		{
			get
			{
				return this.GetTable<COMPUTADORA>();
			}
		}
		
		public System.Data.Linq.Table<EMPLEADO> EMPLEADO
		{
			get
			{
				return this.GetTable<EMPLEADO>();
			}
		}
		
		public System.Data.Linq.Table<RENTA> RENTA
		{
			get
			{
				return this.GetTable<RENTA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatArea")]
	public partial class CatArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _strArea;
		
		private string _strDescripcion;
		
		private EntitySet<COMPUTADORA> _COMPUTADORA;
		
		private EntitySet<EMPLEADO> _EMPLEADO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnstrAreaChanging(string value);
    partial void OnstrAreaChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatArea()
		{
			this._COMPUTADORA = new EntitySet<COMPUTADORA>(new Action<COMPUTADORA>(this.attach_COMPUTADORA), new Action<COMPUTADORA>(this.detach_COMPUTADORA));
			this._EMPLEADO = new EntitySet<EMPLEADO>(new Action<EMPLEADO>(this.attach_EMPLEADO), new Action<EMPLEADO>(this.detach_EMPLEADO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strArea", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strArea
		{
			get
			{
				return this._strArea;
			}
			set
			{
				if ((this._strArea != value))
				{
					this.OnstrAreaChanging(value);
					this.SendPropertyChanging();
					this._strArea = value;
					this.SendPropertyChanged("strArea");
					this.OnstrAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(100)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatArea_COMPUTADORA", Storage="_COMPUTADORA", ThisKey="Id", OtherKey="idArea")]
		public EntitySet<COMPUTADORA> COMPUTADORA
		{
			get
			{
				return this._COMPUTADORA;
			}
			set
			{
				this._COMPUTADORA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatArea_EMPLEADO", Storage="_EMPLEADO", ThisKey="Id", OtherKey="idArea")]
		public EntitySet<EMPLEADO> EMPLEADO
		{
			get
			{
				return this._EMPLEADO;
			}
			set
			{
				this._EMPLEADO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_COMPUTADORA(COMPUTADORA entity)
		{
			this.SendPropertyChanging();
			entity.CatArea = this;
		}
		
		private void detach_COMPUTADORA(COMPUTADORA entity)
		{
			this.SendPropertyChanging();
			entity.CatArea = null;
		}
		
		private void attach_EMPLEADO(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.CatArea = this;
		}
		
		private void detach_EMPLEADO(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.CatArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USUARIO")]
	public partial class USUARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _email;
		
		private string _username;
		
		private string _password;
		
		private bool _isValid;
		
		private int _idEmpleado;
		
		private EntitySet<CatRecoveryToken> _CatRecoveryToken;
		
		private EntityRef<EMPLEADO> _EMPLEADO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnisValidChanging(bool value);
    partial void OnisValidChanged();
    partial void OnidEmpleadoChanging(int value);
    partial void OnidEmpleadoChanged();
    #endregion
		
		public USUARIO()
		{
			this._CatRecoveryToken = new EntitySet<CatRecoveryToken>(new Action<CatRecoveryToken>(this.attach_CatRecoveryToken), new Action<CatRecoveryToken>(this.detach_CatRecoveryToken));
			this._EMPLEADO = default(EntityRef<EMPLEADO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isValid", DbType="Bit NOT NULL")]
		public bool isValid
		{
			get
			{
				return this._isValid;
			}
			set
			{
				if ((this._isValid != value))
				{
					this.OnisValidChanging(value);
					this.SendPropertyChanging();
					this._isValid = value;
					this.SendPropertyChanged("isValid");
					this.OnisValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Int NOT NULL")]
		public int idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._EMPLEADO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_CatRecoveryToken", Storage="_CatRecoveryToken", ThisKey="Id", OtherKey="idUsuario")]
		public EntitySet<CatRecoveryToken> CatRecoveryToken
		{
			get
			{
				return this._CatRecoveryToken;
			}
			set
			{
				this._CatRecoveryToken.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADO_USUARIO", Storage="_EMPLEADO", ThisKey="idEmpleado", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EMPLEADO EMPLEADO
		{
			get
			{
				return this._EMPLEADO.Entity;
			}
			set
			{
				EMPLEADO previousValue = this._EMPLEADO.Entity;
				if (((previousValue != value) 
							|| (this._EMPLEADO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLEADO.Entity = null;
						previousValue.USUARIO.Remove(this);
					}
					this._EMPLEADO.Entity = value;
					if ((value != null))
					{
						value.USUARIO.Add(this);
						this._idEmpleado = value.Id;
					}
					else
					{
						this._idEmpleado = default(int);
					}
					this.SendPropertyChanged("EMPLEADO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatRecoveryToken(CatRecoveryToken entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = this;
		}
		
		private void detach_CatRecoveryToken(CatRecoveryToken entity)
		{
			this.SendPropertyChanging();
			entity.USUARIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatRecoveryToken")]
	public partial class CatRecoveryToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _dteFechaAlta;
		
		private string _strRecoveryToken;
		
		private System.Nullable<bool> _isValid;
		
		private int _idUsuario;
		
		private EntityRef<USUARIO> _USUARIO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndteFechaAltaChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaAltaChanged();
    partial void OnstrRecoveryTokenChanging(string value);
    partial void OnstrRecoveryTokenChanged();
    partial void OnisValidChanging(System.Nullable<bool> value);
    partial void OnisValidChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    #endregion
		
		public CatRecoveryToken()
		{
			this._USUARIO = default(EntityRef<USUARIO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaAlta", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteFechaAlta
		{
			get
			{
				return this._dteFechaAlta;
			}
			set
			{
				if ((this._dteFechaAlta != value))
				{
					this.OndteFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._dteFechaAlta = value;
					this.SendPropertyChanged("dteFechaAlta");
					this.OndteFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strRecoveryToken", DbType="VarChar(200)")]
		public string strRecoveryToken
		{
			get
			{
				return this._strRecoveryToken;
			}
			set
			{
				if ((this._strRecoveryToken != value))
				{
					this.OnstrRecoveryTokenChanging(value);
					this.SendPropertyChanging();
					this._strRecoveryToken = value;
					this.SendPropertyChanged("strRecoveryToken");
					this.OnstrRecoveryTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isValid", DbType="Bit")]
		public System.Nullable<bool> isValid
		{
			get
			{
				return this._isValid;
			}
			set
			{
				if ((this._isValid != value))
				{
					this.OnisValidChanging(value);
					this.SendPropertyChanging();
					this._isValid = value;
					this.SendPropertyChanged("isValid");
					this.OnisValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._USUARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USUARIO_CatRecoveryToken", Storage="_USUARIO", ThisKey="idUsuario", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public USUARIO USUARIO
		{
			get
			{
				return this._USUARIO.Entity;
			}
			set
			{
				USUARIO previousValue = this._USUARIO.Entity;
				if (((previousValue != value) 
							|| (this._USUARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USUARIO.Entity = null;
						previousValue.CatRecoveryToken.Remove(this);
					}
					this._USUARIO.Entity = value;
					if ((value != null))
					{
						value.CatRecoveryToken.Add(this);
						this._idUsuario = value.Id;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("USUARIO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatRol")]
	public partial class CatRol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _strRol;
		
		private string _strDescripcion;
		
		private EntitySet<EMPLEADO> _EMPLEADO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnstrRolChanging(string value);
    partial void OnstrRolChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatRol()
		{
			this._EMPLEADO = new EntitySet<EMPLEADO>(new Action<EMPLEADO>(this.attach_EMPLEADO), new Action<EMPLEADO>(this.detach_EMPLEADO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strRol", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strRol
		{
			get
			{
				return this._strRol;
			}
			set
			{
				if ((this._strRol != value))
				{
					this.OnstrRolChanging(value);
					this.SendPropertyChanging();
					this._strRol = value;
					this.SendPropertyChanged("strRol");
					this.OnstrRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(100)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatRol_EMPLEADO", Storage="_EMPLEADO", ThisKey="Id", OtherKey="idRol")]
		public EntitySet<EMPLEADO> EMPLEADO
		{
			get
			{
				return this._EMPLEADO;
			}
			set
			{
				this._EMPLEADO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLEADO(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.CatRol = this;
		}
		
		private void detach_EMPLEADO(EMPLEADO entity)
		{
			this.SendPropertyChanging();
			entity.CatRol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMPUTADORA")]
	public partial class COMPUTADORA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _strNombre;
		
		private string _strDescripcion;
		
		private System.Nullable<System.DateTime> _dteFechaAlta;
		
		private int _idArea;
		
		private System.Nullable<decimal> _monTarifa;
		
		private string _strTeclado;
		
		private string _strMonitor;
		
		private string _strMouse;
		
		private string _strAudifonos;
		
		private string _strCPU;
		
		private string _strRAM;
		
		private string _strGPU;
		
		private System.Nullable<System.DateTime> _tempInicioRenta;
		
		private EntitySet<RENTA> _RENTA;
		
		private EntityRef<CatArea> _CatArea;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    partial void OndteFechaAltaChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaAltaChanged();
    partial void OnidAreaChanging(int value);
    partial void OnidAreaChanged();
    partial void OnmonTarifaChanging(System.Nullable<decimal> value);
    partial void OnmonTarifaChanged();
    partial void OnstrTecladoChanging(string value);
    partial void OnstrTecladoChanged();
    partial void OnstrMonitorChanging(string value);
    partial void OnstrMonitorChanged();
    partial void OnstrMouseChanging(string value);
    partial void OnstrMouseChanged();
    partial void OnstrAudifonosChanging(string value);
    partial void OnstrAudifonosChanged();
    partial void OnstrCPUChanging(string value);
    partial void OnstrCPUChanged();
    partial void OnstrRAMChanging(string value);
    partial void OnstrRAMChanged();
    partial void OnstrGPUChanging(string value);
    partial void OnstrGPUChanged();
    partial void OntempInicioRentaChanging(System.Nullable<System.DateTime> value);
    partial void OntempInicioRentaChanged();
    #endregion
		
		public COMPUTADORA()
		{
			this._RENTA = new EntitySet<RENTA>(new Action<RENTA>(this.attach_RENTA), new Action<RENTA>(this.detach_RENTA));
			this._CatArea = default(EntityRef<CatArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(50)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(50)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaAlta", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteFechaAlta
		{
			get
			{
				return this._dteFechaAlta;
			}
			set
			{
				if ((this._dteFechaAlta != value))
				{
					this.OndteFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._dteFechaAlta = value;
					this.SendPropertyChanged("dteFechaAlta");
					this.OndteFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idArea", DbType="Int NOT NULL")]
		public int idArea
		{
			get
			{
				return this._idArea;
			}
			set
			{
				if ((this._idArea != value))
				{
					if (this._CatArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAreaChanging(value);
					this.SendPropertyChanging();
					this._idArea = value;
					this.SendPropertyChanged("idArea");
					this.OnidAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monTarifa", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> monTarifa
		{
			get
			{
				return this._monTarifa;
			}
			set
			{
				if ((this._monTarifa != value))
				{
					this.OnmonTarifaChanging(value);
					this.SendPropertyChanging();
					this._monTarifa = value;
					this.SendPropertyChanged("monTarifa");
					this.OnmonTarifaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTeclado", DbType="VarChar(50)")]
		public string strTeclado
		{
			get
			{
				return this._strTeclado;
			}
			set
			{
				if ((this._strTeclado != value))
				{
					this.OnstrTecladoChanging(value);
					this.SendPropertyChanging();
					this._strTeclado = value;
					this.SendPropertyChanged("strTeclado");
					this.OnstrTecladoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strMonitor", DbType="VarChar(50)")]
		public string strMonitor
		{
			get
			{
				return this._strMonitor;
			}
			set
			{
				if ((this._strMonitor != value))
				{
					this.OnstrMonitorChanging(value);
					this.SendPropertyChanging();
					this._strMonitor = value;
					this.SendPropertyChanged("strMonitor");
					this.OnstrMonitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strMouse", DbType="VarChar(50)")]
		public string strMouse
		{
			get
			{
				return this._strMouse;
			}
			set
			{
				if ((this._strMouse != value))
				{
					this.OnstrMouseChanging(value);
					this.SendPropertyChanging();
					this._strMouse = value;
					this.SendPropertyChanged("strMouse");
					this.OnstrMouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAudifonos", DbType="VarChar(50)")]
		public string strAudifonos
		{
			get
			{
				return this._strAudifonos;
			}
			set
			{
				if ((this._strAudifonos != value))
				{
					this.OnstrAudifonosChanging(value);
					this.SendPropertyChanging();
					this._strAudifonos = value;
					this.SendPropertyChanged("strAudifonos");
					this.OnstrAudifonosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCPU", DbType="VarChar(50)")]
		public string strCPU
		{
			get
			{
				return this._strCPU;
			}
			set
			{
				if ((this._strCPU != value))
				{
					this.OnstrCPUChanging(value);
					this.SendPropertyChanging();
					this._strCPU = value;
					this.SendPropertyChanged("strCPU");
					this.OnstrCPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strRAM", DbType="VarChar(50)")]
		public string strRAM
		{
			get
			{
				return this._strRAM;
			}
			set
			{
				if ((this._strRAM != value))
				{
					this.OnstrRAMChanging(value);
					this.SendPropertyChanging();
					this._strRAM = value;
					this.SendPropertyChanged("strRAM");
					this.OnstrRAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strGPU", DbType="VarChar(50)")]
		public string strGPU
		{
			get
			{
				return this._strGPU;
			}
			set
			{
				if ((this._strGPU != value))
				{
					this.OnstrGPUChanging(value);
					this.SendPropertyChanging();
					this._strGPU = value;
					this.SendPropertyChanged("strGPU");
					this.OnstrGPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tempInicioRenta", DbType="DateTime")]
		public System.Nullable<System.DateTime> tempInicioRenta
		{
			get
			{
				return this._tempInicioRenta;
			}
			set
			{
				if ((this._tempInicioRenta != value))
				{
					this.OntempInicioRentaChanging(value);
					this.SendPropertyChanging();
					this._tempInicioRenta = value;
					this.SendPropertyChanged("tempInicioRenta");
					this.OntempInicioRentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMPUTADORA_RENTA", Storage="_RENTA", ThisKey="Id", OtherKey="idEquipo")]
		public EntitySet<RENTA> RENTA
		{
			get
			{
				return this._RENTA;
			}
			set
			{
				this._RENTA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatArea_COMPUTADORA", Storage="_CatArea", ThisKey="idArea", OtherKey="Id", IsForeignKey=true)]
		public CatArea CatArea
		{
			get
			{
				return this._CatArea.Entity;
			}
			set
			{
				CatArea previousValue = this._CatArea.Entity;
				if (((previousValue != value) 
							|| (this._CatArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatArea.Entity = null;
						previousValue.COMPUTADORA.Remove(this);
					}
					this._CatArea.Entity = value;
					if ((value != null))
					{
						value.COMPUTADORA.Add(this);
						this._idArea = value.Id;
					}
					else
					{
						this._idArea = default(int);
					}
					this.SendPropertyChanged("CatArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RENTA(RENTA entity)
		{
			this.SendPropertyChanging();
			entity.COMPUTADORA = this;
		}
		
		private void detach_RENTA(RENTA entity)
		{
			this.SendPropertyChanging();
			entity.COMPUTADORA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLEADO")]
	public partial class EMPLEADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _strNombre;
		
		private string _strAPaterno;
		
		private string _strAMaterno;
		
		private System.Nullable<System.DateTime> _dteFechaNacimiento;
		
		private System.Nullable<int> _intEdad;
		
		private string _strCURP;
		
		private string _strRFC;
		
		private System.Nullable<System.DateTime> _dteFechaIngreso;
		
		private int _idRol;
		
		private int _idArea;
		
		private bool _boolActivo;
		
		private EntitySet<USUARIO> _USUARIO;
		
		private EntitySet<RENTA> _RENTA;
		
		private EntityRef<CatArea> _CatArea;
		
		private EntityRef<CatRol> _CatRol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrAPaternoChanging(string value);
    partial void OnstrAPaternoChanged();
    partial void OnstrAMaternoChanging(string value);
    partial void OnstrAMaternoChanged();
    partial void OndteFechaNacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaNacimientoChanged();
    partial void OnintEdadChanging(System.Nullable<int> value);
    partial void OnintEdadChanged();
    partial void OnstrCURPChanging(string value);
    partial void OnstrCURPChanged();
    partial void OnstrRFCChanging(string value);
    partial void OnstrRFCChanged();
    partial void OndteFechaIngresoChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaIngresoChanged();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnidAreaChanging(int value);
    partial void OnidAreaChanged();
    partial void OnboolActivoChanging(bool value);
    partial void OnboolActivoChanged();
    #endregion
		
		public EMPLEADO()
		{
			this._USUARIO = new EntitySet<USUARIO>(new Action<USUARIO>(this.attach_USUARIO), new Action<USUARIO>(this.detach_USUARIO));
			this._RENTA = new EntitySet<RENTA>(new Action<RENTA>(this.attach_RENTA), new Action<RENTA>(this.detach_RENTA));
			this._CatArea = default(EntityRef<CatArea>);
			this._CatRol = default(EntityRef<CatRol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAPaterno", DbType="VarChar(50)")]
		public string strAPaterno
		{
			get
			{
				return this._strAPaterno;
			}
			set
			{
				if ((this._strAPaterno != value))
				{
					this.OnstrAPaternoChanging(value);
					this.SendPropertyChanging();
					this._strAPaterno = value;
					this.SendPropertyChanged("strAPaterno");
					this.OnstrAPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAMaterno", DbType="VarChar(50)")]
		public string strAMaterno
		{
			get
			{
				return this._strAMaterno;
			}
			set
			{
				if ((this._strAMaterno != value))
				{
					this.OnstrAMaternoChanging(value);
					this.SendPropertyChanging();
					this._strAMaterno = value;
					this.SendPropertyChanged("strAMaterno");
					this.OnstrAMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaNacimiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteFechaNacimiento
		{
			get
			{
				return this._dteFechaNacimiento;
			}
			set
			{
				if ((this._dteFechaNacimiento != value))
				{
					this.OndteFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._dteFechaNacimiento = value;
					this.SendPropertyChanged("dteFechaNacimiento");
					this.OndteFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEdad", DbType="Int")]
		public System.Nullable<int> intEdad
		{
			get
			{
				return this._intEdad;
			}
			set
			{
				if ((this._intEdad != value))
				{
					this.OnintEdadChanging(value);
					this.SendPropertyChanging();
					this._intEdad = value;
					this.SendPropertyChanged("intEdad");
					this.OnintEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCURP", DbType="VarChar(50)")]
		public string strCURP
		{
			get
			{
				return this._strCURP;
			}
			set
			{
				if ((this._strCURP != value))
				{
					this.OnstrCURPChanging(value);
					this.SendPropertyChanging();
					this._strCURP = value;
					this.SendPropertyChanged("strCURP");
					this.OnstrCURPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strRFC", DbType="VarChar(50)")]
		public string strRFC
		{
			get
			{
				return this._strRFC;
			}
			set
			{
				if ((this._strRFC != value))
				{
					this.OnstrRFCChanging(value);
					this.SendPropertyChanging();
					this._strRFC = value;
					this.SendPropertyChanged("strRFC");
					this.OnstrRFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaIngreso", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteFechaIngreso
		{
			get
			{
				return this._dteFechaIngreso;
			}
			set
			{
				if ((this._dteFechaIngreso != value))
				{
					this.OndteFechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._dteFechaIngreso = value;
					this.SendPropertyChanged("dteFechaIngreso");
					this.OndteFechaIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", DbType="Int NOT NULL")]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					if (this._CatRol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idArea", DbType="Int NOT NULL")]
		public int idArea
		{
			get
			{
				return this._idArea;
			}
			set
			{
				if ((this._idArea != value))
				{
					if (this._CatArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAreaChanging(value);
					this.SendPropertyChanging();
					this._idArea = value;
					this.SendPropertyChanged("idArea");
					this.OnidAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_boolActivo", DbType="Bit NOT NULL")]
		public bool boolActivo
		{
			get
			{
				return this._boolActivo;
			}
			set
			{
				if ((this._boolActivo != value))
				{
					this.OnboolActivoChanging(value);
					this.SendPropertyChanging();
					this._boolActivo = value;
					this.SendPropertyChanged("boolActivo");
					this.OnboolActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADO_USUARIO", Storage="_USUARIO", ThisKey="Id", OtherKey="idEmpleado")]
		public EntitySet<USUARIO> USUARIO
		{
			get
			{
				return this._USUARIO;
			}
			set
			{
				this._USUARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADO_RENTA", Storage="_RENTA", ThisKey="Id", OtherKey="idEmpleado")]
		public EntitySet<RENTA> RENTA
		{
			get
			{
				return this._RENTA;
			}
			set
			{
				this._RENTA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatArea_EMPLEADO", Storage="_CatArea", ThisKey="idArea", OtherKey="Id", IsForeignKey=true)]
		public CatArea CatArea
		{
			get
			{
				return this._CatArea.Entity;
			}
			set
			{
				CatArea previousValue = this._CatArea.Entity;
				if (((previousValue != value) 
							|| (this._CatArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatArea.Entity = null;
						previousValue.EMPLEADO.Remove(this);
					}
					this._CatArea.Entity = value;
					if ((value != null))
					{
						value.EMPLEADO.Add(this);
						this._idArea = value.Id;
					}
					else
					{
						this._idArea = default(int);
					}
					this.SendPropertyChanged("CatArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatRol_EMPLEADO", Storage="_CatRol", ThisKey="idRol", OtherKey="Id", IsForeignKey=true)]
		public CatRol CatRol
		{
			get
			{
				return this._CatRol.Entity;
			}
			set
			{
				CatRol previousValue = this._CatRol.Entity;
				if (((previousValue != value) 
							|| (this._CatRol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatRol.Entity = null;
						previousValue.EMPLEADO.Remove(this);
					}
					this._CatRol.Entity = value;
					if ((value != null))
					{
						value.EMPLEADO.Add(this);
						this._idRol = value.Id;
					}
					else
					{
						this._idRol = default(int);
					}
					this.SendPropertyChanged("CatRol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USUARIO(USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADO = this;
		}
		
		private void detach_USUARIO(USUARIO entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADO = null;
		}
		
		private void attach_RENTA(RENTA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADO = this;
		}
		
		private void detach_RENTA(RENTA entity)
		{
			this.SendPropertyChanging();
			entity.EMPLEADO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RENTA")]
	public partial class RENTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _dteFechaInicio;
		
		private System.Nullable<System.DateTime> _dteFechaFinal;
		
		private System.Nullable<double> _dteTiempoTotal;
		
		private int _idEmpleado;
		
		private int _idEquipo;
		
		private System.Nullable<decimal> _monSubtotal;
		
		private System.Nullable<decimal> _monIVA;
		
		private System.Nullable<decimal> _monTotal;
		
		private System.Nullable<decimal> _monPago;
		
		private System.Nullable<decimal> _monCambio;
		
		private EntityRef<COMPUTADORA> _COMPUTADORA;
		
		private EntityRef<EMPLEADO> _EMPLEADO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndteFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaInicioChanged();
    partial void OndteFechaFinalChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaFinalChanged();
    partial void OndteTiempoTotalChanging(System.Nullable<double> value);
    partial void OndteTiempoTotalChanged();
    partial void OnidEmpleadoChanging(int value);
    partial void OnidEmpleadoChanged();
    partial void OnidEquipoChanging(int value);
    partial void OnidEquipoChanged();
    partial void OnmonSubtotalChanging(System.Nullable<decimal> value);
    partial void OnmonSubtotalChanged();
    partial void OnmonIVAChanging(System.Nullable<decimal> value);
    partial void OnmonIVAChanged();
    partial void OnmonTotalChanging(System.Nullable<decimal> value);
    partial void OnmonTotalChanged();
    partial void OnmonPagoChanging(System.Nullable<decimal> value);
    partial void OnmonPagoChanged();
    partial void OnmonCambioChanging(System.Nullable<decimal> value);
    partial void OnmonCambioChanged();
    #endregion
		
		public RENTA()
		{
			this._COMPUTADORA = default(EntityRef<COMPUTADORA>);
			this._EMPLEADO = default(EntityRef<EMPLEADO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteFechaInicio
		{
			get
			{
				return this._dteFechaInicio;
			}
			set
			{
				if ((this._dteFechaInicio != value))
				{
					this.OndteFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._dteFechaInicio = value;
					this.SendPropertyChanged("dteFechaInicio");
					this.OndteFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaFinal", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteFechaFinal
		{
			get
			{
				return this._dteFechaFinal;
			}
			set
			{
				if ((this._dteFechaFinal != value))
				{
					this.OndteFechaFinalChanging(value);
					this.SendPropertyChanging();
					this._dteFechaFinal = value;
					this.SendPropertyChanged("dteFechaFinal");
					this.OndteFechaFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteTiempoTotal", DbType="Float")]
		public System.Nullable<double> dteTiempoTotal
		{
			get
			{
				return this._dteTiempoTotal;
			}
			set
			{
				if ((this._dteTiempoTotal != value))
				{
					this.OndteTiempoTotalChanging(value);
					this.SendPropertyChanging();
					this._dteTiempoTotal = value;
					this.SendPropertyChanged("dteTiempoTotal");
					this.OndteTiempoTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Int NOT NULL")]
		public int idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._EMPLEADO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEquipo", DbType="Int NOT NULL")]
		public int idEquipo
		{
			get
			{
				return this._idEquipo;
			}
			set
			{
				if ((this._idEquipo != value))
				{
					if (this._COMPUTADORA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEquipoChanging(value);
					this.SendPropertyChanging();
					this._idEquipo = value;
					this.SendPropertyChanged("idEquipo");
					this.OnidEquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monSubtotal", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> monSubtotal
		{
			get
			{
				return this._monSubtotal;
			}
			set
			{
				if ((this._monSubtotal != value))
				{
					this.OnmonSubtotalChanging(value);
					this.SendPropertyChanging();
					this._monSubtotal = value;
					this.SendPropertyChanged("monSubtotal");
					this.OnmonSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monIVA", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> monIVA
		{
			get
			{
				return this._monIVA;
			}
			set
			{
				if ((this._monIVA != value))
				{
					this.OnmonIVAChanging(value);
					this.SendPropertyChanging();
					this._monIVA = value;
					this.SendPropertyChanged("monIVA");
					this.OnmonIVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monTotal", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> monTotal
		{
			get
			{
				return this._monTotal;
			}
			set
			{
				if ((this._monTotal != value))
				{
					this.OnmonTotalChanging(value);
					this.SendPropertyChanging();
					this._monTotal = value;
					this.SendPropertyChanged("monTotal");
					this.OnmonTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monPago", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> monPago
		{
			get
			{
				return this._monPago;
			}
			set
			{
				if ((this._monPago != value))
				{
					this.OnmonPagoChanging(value);
					this.SendPropertyChanging();
					this._monPago = value;
					this.SendPropertyChanged("monPago");
					this.OnmonPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monCambio", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> monCambio
		{
			get
			{
				return this._monCambio;
			}
			set
			{
				if ((this._monCambio != value))
				{
					this.OnmonCambioChanging(value);
					this.SendPropertyChanging();
					this._monCambio = value;
					this.SendPropertyChanged("monCambio");
					this.OnmonCambioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMPUTADORA_RENTA", Storage="_COMPUTADORA", ThisKey="idEquipo", OtherKey="Id", IsForeignKey=true)]
		public COMPUTADORA COMPUTADORA
		{
			get
			{
				return this._COMPUTADORA.Entity;
			}
			set
			{
				COMPUTADORA previousValue = this._COMPUTADORA.Entity;
				if (((previousValue != value) 
							|| (this._COMPUTADORA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COMPUTADORA.Entity = null;
						previousValue.RENTA.Remove(this);
					}
					this._COMPUTADORA.Entity = value;
					if ((value != null))
					{
						value.RENTA.Add(this);
						this._idEquipo = value.Id;
					}
					else
					{
						this._idEquipo = default(int);
					}
					this.SendPropertyChanged("COMPUTADORA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLEADO_RENTA", Storage="_EMPLEADO", ThisKey="idEmpleado", OtherKey="Id", IsForeignKey=true)]
		public EMPLEADO EMPLEADO
		{
			get
			{
				return this._EMPLEADO.Entity;
			}
			set
			{
				EMPLEADO previousValue = this._EMPLEADO.Entity;
				if (((previousValue != value) 
							|| (this._EMPLEADO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLEADO.Entity = null;
						previousValue.RENTA.Remove(this);
					}
					this._EMPLEADO.Entity = value;
					if ((value != null))
					{
						value.RENTA.Add(this);
						this._idEmpleado = value.Id;
					}
					else
					{
						this._idEmpleado = default(int);
					}
					this.SendPropertyChanged("EMPLEADO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
